<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <http pattern="/rest/**" entry-point-ref="oauthAuthenticationEntryPoint"
        create-session="never"
        xmlns="http://www.springframework.org/schema/security">
        <anonymous enabled="false"/>
        <intercept-url pattern="/rest/objects/oauthGuarded"
            requires-channel="any" access="ROLE_USER"/>
        <custom-filter ref="resourceServerFilter" before="PRE_AUTH_FILTER"/>
    </http>

    <http disable-url-rewriting="true"
        xmlns="http://www.springframework.org/schema/security">
        <intercept-url pattern="/oauth/**" access="ROLE_USER"/>
        <http-basic/>
        <logout/>
        <anonymous/>
    </http>

    <oauth:resource-server id="resourceServerFilter" resource-id="fedora"
        token-services-ref="tokenServices"
        entry-point-ref="oauthAuthenticationEntryPoint"
        auth-details-source-ref=""/>

    <bean id="oauthAuthenticationEntryPoint"
        class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="fedora"/>
    </bean>

    <authentication-manager alias="authenticationManager"
        xmlns="http://www.springframework.org/schema/security">
        <authentication-provider>
            <user-service id="userDetailsService">
                <user name="fedora" password="fedora" authorities="ROLE_USER"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

    <!-- the following stuff has to do with authenticating the identity of
        OAuth clients for Fedora (as opposed to users) -->
    <bean id="clientAuthenticationEntryPoint"
        class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="fedora"/>
        <property name="typeName" value="Basic"/>
    </bean>

    <authentication-manager id="clientAuthenticationManager"
        xmlns="http://www.springframework.org/schema/security">
        <authentication-provider user-service-ref="clientDetailsUserService"/>
    </authentication-manager>

    <bean id="clientDetailsUserService"
        class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
        <constructor-arg ref="clientDetails"/>
    </bean>

    <client-details-service id="clientDetails"
        xmlns="http://www.springframework.org/schema/security/oauth2">
        <client client-id="fedora" secret="fedora"
            authorized-grant-types="password, refresh_token, implicit, client_credentials, authorization_code, web_server"
            authorities="ROLE_USER, ROLE_CLIENT, ROLE_TRUSTED_CLIENT"/>
    </client-details-service>

    <authorization-server client-details-service-ref="clientDetails"
        token-services-ref="tokenServices" token-endpoint-url="/token"
        authorization-endpoint-url="/authorize"
        xmlns="http://www.springframework.org/schema/security/oauth2">
        <authorization-code disabled="false"/>
        <implicit disabled="false"/>
        <refresh-token/>
        <client-credentials disabled="false"/>
        <password/>
    </authorization-server>

    <!-- the following elements support token minting, in some way... -->
    <bean id="tokenStore"
        class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore"/>

    <bean id="tokenServices"
        class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
        <property name="clientDetailsService" ref="clientDetails"/>
    </bean>

    <!-- seems to control a 401 page of some kind, or perhaps a 403 page? -->
    <bean id="oauthAccessDeniedHandler"
        class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"/>

    <!-- the following two elements appear to involve the interpretation of Spring EL expressions that indicate
        which resources are to be guarded...? -->
    <global-method-security pre-post-annotations="enabled"
        proxy-target-class="true"
        xmlns="http://www.springframework.org/schema/security">
        <!--you could also wire in the expression handler up at the layer of the http filters. See https://jira.springsource.org/browse/SEC-1452 -->
        <expression-handler ref="oauthExpressionHandler"/>
    </global-method-security>
    <oauth:expression-handler id="oauthExpressionHandler"/>

    <mvc:annotation-driven/>

    <mvc:default-servlet-handler/>

</beans>
